plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.record-system'
version = '0.0.1'

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-activemq'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'de.codecentric:spring-boot-admin-starter-client:3.1.7'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'
	implementation "org.springframework.cloud:spring-cloud-starter-config"

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	implementation 'org.springframework.retry:spring-retry:2.0.3'
	implementation 'org.springframework:spring-aspects:6.0.12'
}

tasks.named('test') {
	useJUnitPlatform()
}
